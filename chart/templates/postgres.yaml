{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    polis.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      polis.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        polis.service: postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.registry }}/{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: Always
          env:
            - name: POSTGRES_DB
              value: {{ .Values.db.database }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.db.password }}
            - name: POSTGRES_USER
              value: {{ .Values.db.user }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            {{- range $key, $value := .Values.postgres.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres
      volumes:
        - name: postgres
          persistentVolumeClaim:
            claimName: postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    polis.service: postgres
  name: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgres.storage }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    polis.service: postgres
  name: postgres
spec:
  selector:
    polis.service: postgres
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
{{- end }}
